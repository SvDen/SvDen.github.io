"use strict";function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,i=Array(e.length);t<e.length;t++)i[t]=e[t];return i}return Array.from(e)}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}var _typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol?"symbol":typeof e},_createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var a=t[i];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}return function(t,i,a){return i&&e(t.prototype,i),a&&e(t,a),t}}(),Food=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];_classCallCheck(this,e),this._POINT_DIM=t.pointDim||10,this._points=t.points||1,this._foodArray=new Array(this._points),this._W=t.canvasW||500,this._H=t.canvasH||500}return _createClass(e,[{key:"createFood",value:function(){for(var e=0;e<this._points;e++)this._foodArray[e]||(this._foodArray[e]={x:Math.round(Math.random()*(this._W-this._POINT_DIM)/this._POINT_DIM),y:Math.round(Math.random()*(this._H-this._POINT_DIM)/this._POINT_DIM)})}},{key:"clearFood",value:function(){this._foodArray.forEach(function(e,t,i){return delete i[t]})}},{key:"cords",get:function(){return this._foodArray}}]),e}(),SnakeGame=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];_classCallCheck(this,e),this._gameMode=t.gameMode||"solo",this._firstSnakeName=t.firstSnakeName||"1-st player",this._secondSnakeName=t.secondSnakeName||"2-nd player",this._firstSnakeColor=t.firstSnakeColor||"Blue",this._secondSnakeColor=t.secondSnakeColor||"Red",this._canvasID=t.canvasID||"canvas",this._pointDim=t.pointDim||10,this._startSnakesSpeed=t.startSnakesSpeed||10,this._amountOfFood=t.amountOfFood||10,this._canvas=document.getElementById(this._canvasID),this._context=this._canvas.getContext("2d"),this._W=this._canvas.width,this._H=this._canvas.height,this._animationKey,this._isGameWasLost=!1,this.draw=this.draw.bind(this,this._context)}return _createClass(e,[{key:"createSnake",value:function(){this.snakeArray=[],this.snake=new Snake({snakeSpeed:this._startSnakesSpeed,pointDim:this._pointDim,snakeName:this._firstSnakeName,snakeColor:this._firstSnakeColor}),this.snake.bindControls({left:37,right:39,up:38,down:40}),this.snakeArray.push(this.snake),"duo"==this._gameMode&&(this.snake2=new Snake({snakeSpeed:this._startSnakesSpeed,pointDim:this._pointDim,snakeName:this._secondSnakeName,snakeColor:this._secondSnakeColor}),this.snake2.bindControls({left:65,right:68,up:87,down:83}),this.snakeArray.push(this.snake2))}},{key:"createFood",value:function(){this._food=new Food({pointDim:this._pointDim,points:this._amountOfFood,canvasW:this._W,canvasH:this._H})}},{key:"init",value:function(){this.createSnake(),this.createFood(),this.drawCountdown(5)}},{key:"refreshLevel",value:function(){var e=this;this._food.clearFood(),this._food.createFood({W:this._W,H:this._H}),this.snakeArray.forEach(function(t,i){0==i?t.createSnake(0,e._H/2/10-1):t.createSnake(0,e._H/2/10+1)})}},{key:"drawCountdown",value:function(){var e=this,t=arguments.length<=0||void 0===arguments[0]?3:arguments[0],i=this._W/4;this._isGameWasLost=!1,this.drawScreenSaver();for(var a=function(a){setTimeout(function(){e.drawScreenSaver(),e._context.font=i+"pt Verdana",e._context.fillStyle="red";var t=e._context.measureText(a).width;e._context.fillText(a,(e._W-t)/2,e._H-.5*i)},1e3*(t-a))},n=t;n>0;n--)a(n);setTimeout(function(){e.refreshLevel(),e.draw()},1e3*t)}},{key:"clearCanvas",value:function(){this._context.clearRect(0,0,this._W,this._H),this._context.fillStyle="white",this._context.fillRect(0,0,this._W,this._H),this._context.strokeStyle="black",this._context.strokeRect(0,0,this._W,this._H)}},{key:"createPixel",value:function(){for(var e=this,t=arguments.length<=0||void 0===arguments[0]?"blue":arguments[0],i=arguments.length<=1||void 0===arguments[1]?"white":arguments[1],a=arguments.length,n=Array(a>2?a-2:0),s=2;a>s;s++)n[s-2]=arguments[s];n.forEach(function(a){e._context.fillStyle=t,e._context.fillRect(a.x*e._pointDim,a.y*e._pointDim,e._pointDim,e._pointDim),e._context.strokeStyle=i,e._context.strokeRect(a.x*e._pointDim,a.y*e._pointDim,e._pointDim,e._pointDim)})}},{key:"drawSnakesMoves",value:function(e,t){var i=this,a=e.cords;this.createPixel.apply(this,["green","white"].concat(_toConsumableArray(a)));var n=(new Date).getTime();t.forEach(function(e){var t=e.cords,s=n-t.snakePrefFrameTime;if(s>=t.snakeDelay){var o=function(){e.prevFrameTime=n;var s={x:t.snakeArray[0].x,y:t.snakeArray[0].y},o=t.currentDirection,r=t.POINT_DIM,c=t.snakeArray;switch(o){case"right":s.x++;break;case"left":s.x--;break;case"down":s.y++;break;case"up":s.y--}if(e.prevDirection=o,s.x*r>=i._W||s.x<0||s.y*r>=i._H||s.y<0||c.some(function(e){return e.x==s.x&&e.y==s.y}))return cancelAnimationFrame(i._animationKey),e.loseTheGame(),i._isGameWasLost=!0,{v:void 0};var h={},_=void 0;a.forEach(function(e,t,i){return e.x!=s.x||e.y!=s.y?e:(_=e,void delete i[t])}),_?(Object.assign(h,_),e.upScore(),i._food.createFood()):(h=c.pop(),Object.assign(h,s)),c.unshift(h)}();if("object"===("undefined"==typeof o?"undefined":_typeof(o)))return o.v}i.createPixel.apply(i,[t.snakeColor,"white"].concat(_toConsumableArray(t.snakeArray)))})}},{key:"draw",value:function(){this._animationKey=requestAnimationFrame(this.draw),this.clearCanvas(),this.drawSnakesMoves(this._food,this.snakeArray),this._isGameWasLost&&this.drawCountdown(),this.drawScores.apply(this,_toConsumableArray(this.snakeArray))}},{key:"drawScores",value:function(){for(var e=this,t=arguments.length,i=Array(t),a=0;t>a;a++)i[a]=arguments[a];i.forEach(function(t,i){var a=10;e._context.font=a+"pt Verdana",e._context.fillStyle=t.cords.snakeColor,e._context.fillText(t.cords.snakeName+": "+t.cords.score,5,e._H-5*(i+1)*a/4)})}},{key:"drawScreenSaver",value:function(){this.clearCanvas();var e=.8*this._W;if(this._animationKey)if("duo"==this._gameMode){var t=this.snake.cords.score,i=this.snake2.cords.score,a=this.snake2.cords.gamesLost,n=this.snake.cords.gamesLost,s=this.snake.cords.prevGameLost?this.snake2:this.snake,o=s.cords.snakeName+" win! Score: "+t+":"+i,r="Total score: "+a+":"+n;this._wrapText(o,s.cords.snakeColor,(this._W-e)/2,.1*this._H,e,15),this._wrapText(r,"black",(this._W-e)/2,.2*this._H,e,25)}else{var c=this.snake.cords.score,h=this.snake.cords.gamesLost,_="You took "+c+" scores!",l=h+" games has been played";this._wrapText(_,this.snake.cords.snakeColor,(this._W-e)/2,.1*this._H,e,15),this._wrapText(l,"black",(this._W-e)/2,.2*this._H,e,25)}else{var d="Your goal is to eat food and grow as much as possible. Try to avoid toching the borders or self-crossing, if this occur the game will end. In the multiplayer mode snakes can cross each other with no collision.";this._wrapText(d,"black",(this._W-e)/2,.05*this._H,e,15);var k=(this._W-e)/2,u=this._firstSnakeName+", use arrow keys on the keyboard to control your snake. Hold key for accelerate";if(this._wrapText(u,this._firstSnakeColor,k,.35*this._H,.5*e,15),"duo"==this._gameMode){var f=this._secondSnakeName+", use W,A,S,D keys on the keyboard to control your snake. Hold key for accelerate";this._wrapText(f,this._secondSnakeColor,this._W-.4*e-k,.35*this._H,.5*e,15)}}}},{key:"_wrapText",value:function(e,t,i,a,n,s){var o=e.split(" "),r="";this._context.fillStyle=t,this._context.font=s+"pt Verdana";for(var c=0;c<o.length;c++){var h=r+o[c]+" ",_=this._context.measureText(h),l=_.width;l>n&&c>0?(this._context.fillText(r,i,a),r=o[c]+" ",a+=1.4*s):r=h}this._context.fillText(r,i,a)}}]),e}();document.forms.snakeGameForm.onsubmit=function(e){var t=this.isSecondPlayer.checked?"duo":"solo",i=this.firstPlayerName.value,a=this.secondPlayerName.value,n=this.firstPlayerColor.value,s=this.secondPlayerColor.value,o=this.startSnakesSpeed.value,r=this.amountOfFood.value;console.log(o);var c=new SnakeGame({gameMode:t,firstSnakeName:i,secondSnakeName:a,firstSnakeColor:n,secondSnakeColor:s,startSnakesSpeed:o,amountOfFood:r});return c.init(),document.getElementById("snake-game-container").classList.add("hidden"),!1};var Snake=function(){function e(){var t=arguments.length<=0||void 0===arguments[0]?{}:arguments[0];_classCallCheck(this,e),this._snakeLenght=t.snakeLenght||5,this._initialSnakeSpeed=t.snakeSpeed||10,this._POINT_DIM=t.pointDim||10,this._color=t.snakeColor||"blue",this._snakeName=t.snakeName||"unknown",this._prevFrameTime=0,this._gamesLost=0}return _createClass(e,[{key:"createSnake",value:function(){var e=arguments.length<=0||void 0===arguments[0]?0:arguments[0],t=arguments.length<=1||void 0===arguments[1]?0:arguments[1],i=arguments.length<=2||void 0===arguments[2]?"right":arguments[2];this._score=0,this._prevGameLost=!1,this._snakeSpeed=this._initialSnakeSpeed,this._snakeArray=[],this._prevDirection=i,this._curDirection=this._prevDirection;for(var a=this._snakeLenght-1;a>=0;a--)this._snakeArray.push({x:a+e,y:t})}},{key:"loseTheGame",value:function(){this._prevGameLost=!0,this._gamesLost++}},{key:"upScore",value:function(){return this._score++}},{key:"bindControls",value:function(e){var t=this;document.addEventListener("keydown",function(i){switch(i.which){case e.right:"left"!=t._prevDirection&&(t._curDirection="right"),"right"==t._prevDirection&&i.repeat&&(t._snakeSpeed=2*t._initialSnakeSpeed);break;case e.up:"down"!=t._prevDirection&&(t._curDirection="up"),"up"==t._prevDirection&&i.repeat&&(t._snakeSpeed=2*t._initialSnakeSpeed);break;case e.left:"right"!=t._prevDirection&&(t._curDirection="left"),"left"==t._prevDirection&&i.repeat&&(t._snakeSpeed=2*t._initialSnakeSpeed);break;case e.down:"up"!=t._prevDirection&&(t._curDirection="down"),"down"==t._prevDirection&&i.repeat&&(t._snakeSpeed=2*t._initialSnakeSpeed)}}),document.addEventListener("keyup",function(i){switch(i.which){case e.right:"right"==t._prevDirection&&(t._snakeSpeed=t._initialSnakeSpeed);break;case e.up:"up"==t._prevDirection&&(t._snakeSpeed=t._initialSnakeSpeed);break;case e.left:"left"==t._prevDirection&&(t._snakeSpeed=t._initialSnakeSpeed);break;case e.down:"down"==t._prevDirection&&(t._snakeSpeed=t._initialSnakeSpeed)}})}},{key:"cords",get:function(){return{currentDirection:this._curDirection,previousDirection:this._prevDirection,snakeArray:this._snakeArray,POINT_DIM:this._POINT_DIM,score:this._score,snakeSpeed:this._snakeSpeed,snakeColor:this._color,snakeDelay:1e3/this._snakeSpeed,snakePrefFrameTime:this._prevFrameTime,snakeName:this._snakeName,gamesLost:this._gamesLost,prevGameLost:this._prevGameLost}}},{key:"prevFrameTime",set:function(e){this._prevFrameTime=e}},{key:"prevDirection",set:function(e){this._prevDirection=e}}]),e}();